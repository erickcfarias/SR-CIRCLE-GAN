#!/usr/bin/env python
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = "2"
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.realpath(__file__))))
import argparse
import yaml
import tensorflow as tf
from utils.data import DataLoader
from model.circle_gan import ganCIRCLE


def parse_args():
    description = """
    A frontend for GANCIRCLE python module.
    """
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument(
        '-c', '--config_file',
        default='config/config.yaml',
        help='Config file for data Preprocessing and GAN training.'
    )
    parser.add_argument(
        '-k', '--key',
        default=None,
        help='AWS KEY'
    )
    parser.add_argument(
        '-s', '--secret',
        default=None,
        help='AWS secret'
    )

    return parser.parse_args()


def parse_config_file(config_file) -> dict:
    """ Read YAML file and do some additional processing.
    """
    config = {}
    with open(config_file, 'r') as file:
        config = yaml.load(file, Loader=yaml.SafeLoader)

    return config


def main():
    args = parse_args()
    config = parse_config_file(args.config_file)

    # Instantiate DATA LOADER
    data_loader = DataLoader(config)

    # Compile the GAN
    gan = ganCIRCLE(data_loader, config, s3_key=args.key, s3_secret=args.secret)

    # Train the model
    gan.train(epochs=config['epochs'])


if __name__ == "__main__":
    main()
